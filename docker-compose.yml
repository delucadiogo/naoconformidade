version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: https://github.com/delucadiogo/naoconformidade.git#main:backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=sua_senha_segura
      - DB_NAME=nao_conformidades
      - JWT_SECRET=seu_jwt_secret_seguro
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/bin/sh", "-c", "/app/scripts/run-migrations.sh && npm start"]
    volumes:
      - uploads:/app/uploads
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sua_senha_segura
      - POSTGRES_DB=nao_conformidades
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:
  uploads:

networks:
  app-network:
    driver: bridge 